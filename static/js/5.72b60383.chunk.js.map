{"version":3,"sources":["components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.componet.jsx","components/collections-overview/collection-overview.container.jsx","redux/shop/shop.selector.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreviewContainer","styled","div","TitleContainer","h1","PreviewContainer","withRouter","title","items","history","match","routeName","onClick","push","path","toUpperCase","filter","item","idx","map","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionForPreview","connect","otherCollectionPreview","isLoading","selectIsCollectionFetching","CollectionOverViewContainer","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","selectCollection","collectionUrlParam","Object","keys","key","isFetching","selectIsCollectionsLoaded","WrappedComponent","otherProps","CollectionItemContainer","BackgroundImage","AddButton","CustomButtonContainer","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","imageUrl","name","price","className","style","backgroundImage","inverted"],"mappings":"u4BAEO,IAAMA,EAA6BC,IAAOC,IAAV,KAU1BC,EAAiBF,IAAOG,GAAV,KASdC,EAAmBJ,IAAOC,IAAV,KCSdI,eAhBW,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,UAAhC,OACtB,eAACX,EAAD,WACI,eAACG,EAAD,CAAgBS,QAAY,kBAAMH,EAAQI,KAAR,UAAgBH,EAAMI,KAAtB,YAA8BH,KAAhE,cAAkFJ,EAAMQ,cAAxF,OACA,cAACV,EAAD,UAEQG,EACCQ,QAAO,SAACC,EAAMC,GAAP,OAAeA,EAAM,KAC5BC,KAAK,SAACF,GAAD,OACF,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKG,e,wHCpBvC,IAAMC,EAA+BpB,IAAOC,IAAV,KCsBnCoB,EAAkBC,YAAyB,CAC7CC,YAAaC,MAGFC,cAAQJ,EAARI,EAjBa,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,YAE3B,OACA,cAACH,EAAD,UAEQG,EAAYL,KAAK,gBAAEC,EAAF,EAAEA,GAAOO,EAAT,6BACb,cAAC,EAAD,eAAiCA,GAARP,WCTnCE,EAAkBC,YAAyB,CAC7CK,UAAYC,MAIVC,EAA8BC,YAChCL,YAAQJ,GACPU,IAF+BD,CAGlCE,GAEaH,a,gCClBf,oJAEMI,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKZ,eAGJe,EAAmB,SAAAC,GAAkB,OAAIF,YAClD,CAACD,IACD,SAAAb,GAAW,OAAKA,EAAeA,EAAYgB,GAAsB,SAGxDf,EAA6Ba,YACtC,CAACD,IACD,SAAAb,GAAW,OAAIA,EAAciB,OAAOC,KAAKlB,GAAaL,KAAI,SAAAwB,GAAG,OAAInB,EAAYmB,MAAS,MAG7Ed,EAA6BS,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKQ,cAGJC,EAA4BP,YACrC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKZ,gB,yECdJQ,IARK,SAAAc,GAAgB,OAAI,YAAmC,IAAhClB,EAA+B,EAA/BA,UAAcmB,EAAiB,6BACtE,OAAOnB,EACH,cAAC,IAAD,IAEI,cAACkB,EAAD,eAAuBC,O,ikDCJ5B,IAAMC,EAA0B/C,IAAOC,IAAV,KAgCtB+C,EAAkBhD,IAAOC,IAAV,KAQhBgD,EAAYjD,YAAOkD,IAAPlD,CAAH,KAgBTmD,EAA4BnD,IAAOC,IAAV,KAQzBmD,EAAgBpD,IAAOqD,KAAV,KAKbC,EAAiBtD,IAAOqD,KAAV,KC9BZ5B,gBAAQ,MAJI,SAAA8B,GAAQ,MAAK,CACrCC,QAAU,SAAAxC,GAAI,OAAIuC,EAASC,YAAQxC,QAGvBS,EAxBQ,SAAC,GAAqB,IAApBT,EAAmB,EAAnBA,KAAMwC,EAAa,EAAbA,QACrBrC,EAA8BH,EAA9BG,GAAIsC,EAA0BzC,EAA1ByC,SAAUC,EAAgB1C,EAAhB0C,KAAMC,EAAU3C,EAAV2C,MAC3B,OACC,eAACZ,EAAD,WACI,cAACC,EAAD,CACEY,UAAU,QACVC,MAAS,CACPC,gBAAe,cAAUL,EAAV,QAGnB,eAACN,EAAD,WACE,eAACC,EAAD,eAAiBM,EAAjB,OACA,eAACJ,EAAD,eAAkBK,EAAlB,UAGF,cAACV,EAAD,CAAWc,UAAQ,EAACpD,QAAU,kBAAM6C,EAAQxC,IAA5C,8BAZ0BG","file":"static/js/5.72b60383.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPreviewContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 30px;\r\n\r\n    @media screen and (max-width: 800px) {\r\n        align-items:center;\r\n        \r\n    }\r\n`;\r\nexport const TitleContainer = styled.h1`\r\n    font-size: 28px;\r\n    margin-bottom: 25px;\r\n\r\n    &:hover {\r\n        color:grey;\r\n    }\r\n`;\r\n\r\nexport const PreviewContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media screen and (max-width: 800px) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        grid-gap: 15px;\r\n    }\r\n`;","import React from 'react';\r\n\r\n// import './collection-preview.styles.scss';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CollectionItem from '../collection-item/collection-item.component';\r\n\r\nimport {\r\nCollectionPreviewContainer,\r\nTitleContainer,\r\nPreviewContainer\r\n} from './collection-preview.styles';\r\n\r\nconst CollectionPreview = ({title, items, history, match, routeName }) => (\r\n    <CollectionPreviewContainer>\r\n        <TitleContainer onClick = { () => history.push(`${match.path}/${routeName}`) } > {title.toUpperCase() } </TitleContainer>\r\n        <PreviewContainer>\r\n            {\r\n                items\r\n                .filter((item, idx) => idx < 4)\r\n                .map( (item) => ( \r\n                    <CollectionItem key={item.id} item={item} />\r\n                ) )\r\n            }\r\n        </PreviewContainer>\r\n\r\n    </CollectionPreviewContainer>\r\n);\r\n\r\nexport default withRouter(CollectionPreview);\r\n","import styled from 'styled-components';\r\n\r\nexport const CollectionsOverviewContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCollectionForPreview } from '../../redux/shop/shop.selector';\r\n\r\nimport CollectionPreview from '../collection-preview/collection-preview.component';\r\n\r\n// import './collections-overview.styles.scss';\r\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\r\n\r\nconst CollectionsOverview = ({ collections }) => {\r\n    // console.log(collections); // for converting the object to array to make map function work\r\n    return(\r\n    <CollectionsOverviewContainer>\r\n        {\r\n            collections.map( ({id, ...otherCollectionPreview}) => (\r\n                <CollectionPreview  key={id} {...otherCollectionPreview} />\r\n            ))\r\n            \r\n        }\r\n    </CollectionsOverviewContainer>\r\n)};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    collections: selectCollectionForPreview\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);","import { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { compose } from 'redux';\r\n\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selector';\r\nimport WithSpinner from '../with-spinner/with-spinner.component';\r\nimport CollectionsOverview from './collections-overview.componet';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading : selectIsCollectionFetching\r\n});\r\n\r\n// const CollectionOverViewContainer = connect(mapStateToProps)(WithSpinner(CollectionsOverview));\r\nconst CollectionOverViewContainer = compose(\r\n    connect(mapStateToProps),\r\n     WithSpinner\r\n)(CollectionsOverview);\r\n\r\nexport default CollectionOverViewContainer;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectCollections],\r\n    collections => (collections ?  collections[collectionUrlParam] : null)\r\n);\r\n\r\nexport const selectCollectionForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key] ) : []\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n)","import React from 'react';\r\n\r\nimport  Spinner  from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n        <Spinner />\r\n        ) : (\r\n            <WrappedComponent { ...otherProps } />\r\n        );\r\n    };\r\n\r\nexport default WithSpinner;","import styled from 'styled-components';\r\n\r\nimport { CustomButtonContainer } from '../custom-button/custom-button.styles';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n    width: 22vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 350px;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    &:hover {\r\n        .image{\r\n          opacity: 0.8;\r\n        }\r\n        button{\r\n          opacity: 0.85;\r\n          display: flex;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 800px) {\r\n        width: 40vw;\r\n\r\n        &:hover {\r\n            .image{\r\n              opacity: unset;\r\n            }\r\n            button{\r\n              opacity:unset;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const  BackgroundImage = styled.div`\r\n    width: 100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nexport const AddButton = styled(CustomButtonContainer)`\r\n    width:80%;\r\n    opacity: 0.7;\r\n    position: absolute;\r\n    top:255px;\r\n    display: none;\r\n\r\n    @media screen and (max-width: 800px) {\r\n        display:block;\r\n        opacity:0.9;\r\n        min-width:unset;\r\n        padding:0 10px;\r\n    }\r\n    \r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n    width: 100%;\r\n    height: 5%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n    width: 90%;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n    width: 10%;\r\n`;","import React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\n// import CustomButton from '../custom-button/custom-button.component';\r\n\r\n// import './collection-item.styles.scss';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({item, addItem}) => {\r\n  const { id, imageUrl, name, price}  = item;\r\n   return(\r\n    <CollectionItemContainer key={id}>\r\n        <BackgroundImage\r\n          className='image'\r\n          style = {{\r\n            backgroundImage : `url(${imageUrl})`\r\n          }}\r\n        />\r\n        <CollectionFooterContainer>\r\n          <NameContainer> {name} </NameContainer>\r\n          <PriceContainer> {price} </PriceContainer>\r\n        </CollectionFooterContainer>\r\n\r\n        <AddButton inverted onClick={ () => addItem(item)}> add to cart  </AddButton>\r\n\r\n    </CollectionItemContainer>\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   addItem : item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}