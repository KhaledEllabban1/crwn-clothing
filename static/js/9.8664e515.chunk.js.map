{"version":3,"sources":["redux/directory/directory.selector.js","components/directory/directory.styles.jsx","components/menu-item/menu-item.styles.jsx","components/menu-item/menu-item.component.jsx","components/directory/directory.component.jsx","pages/homepage/homepage.styles.jsx","pages/homepage/homepage.component.jsx"],"names":["selectDirectorySections","createSelector","state","directory","sections","DirectoryMenuContainer","styled","div","TransitionMenuItem","css","MenuItemContainer","size","BackgroundImageContainer","image","ContentContainer","ContentTitle","h1","ContentSubTitle","span","withRouter","title","imageUrl","history","match","linkUrl","onClick","push","url","className","toUpperCase","mapStateToProps","createStructuredSelector","connect","map","id","otherSectionProps","HomePageContainer","HomePage","onRender","phase","actualDuration","console","log"],"mappings":"8KAIaA,EAA0BC,YACnC,CAHoB,SAAAC,GAAK,OAAIA,EAAMC,aAInC,SAAAA,GAAS,OAAIA,EAAUC,Y,wKCJpB,IAAMC,EAAyBC,IAAOC,IAAV,K,2kDCAnC,IAAMC,EAAqBC,YAAH,KAIXC,EAAoBJ,IAAOC,IAAV,KACf,qBAAII,KAAqB,QAAU,WAkCrCC,EAA2BN,IAAOC,IAAV,IAK/BC,GACkB,gBAAIK,EAAJ,EAAIA,MAAJ,oBAA0BA,EAA1B,QAGXC,EAAmBR,IAAOC,IAAV,IAWvBC,GAGOO,EAAeT,IAAOU,GAAV,KAQZC,EAAkBX,IAAOY,KAAV,KCzCbC,eAnBE,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAUV,EAAnB,EAAmBA,KAAMW,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,QAAzC,OACb,eAACd,EAAD,CACKC,KAAMA,EACNc,QAAY,kBAAMH,EAAQI,KAAR,UAAgBH,EAAMI,KAAtB,OAA4BH,KAFnD,UAKI,cAACZ,EAAD,CACIgB,UAAU,mBACVf,MAAOQ,IAGX,eAACP,EAAD,CAAkBc,UAAU,UAA5B,UACI,eAACb,EAAD,eAAgBK,EAAMS,cAAtB,QACA,cAACZ,EAAD,kCCFNa,EAAkBC,YAAyB,CAC/C3B,SAAUJ,IAIGgC,cAAQF,EAARE,EAjBG,SAAC,GAAD,IAAG5B,EAAH,EAAGA,SAAH,OAChB,cAACC,EAAD,UAGQD,EAAS6B,KAAI,gBAAGC,EAAH,EAAGA,GAAOC,EAAV,6BACT,cAAC,EAAD,eAAuBA,GAARD,W,sPCdtB,IAAME,EAAoB9B,IAAOC,IAAV,KCoBf8B,UAfE,kBAEb,cAACD,EAAD,UACI,cAAC,WAAD,CAAUF,GAAG,YAAYI,SAAU,SAACJ,EAAIK,EAAOC,GAC3CC,QAAQC,IAAI,CACRR,KACAK,QACAC,oBAJR,SAOE,cAAC,EAAD","file":"static/js/9.8664e515.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectDirectory = state => state.directory;\r\n\r\nexport const selectDirectorySections = createSelector(\r\n    [selectDirectory],\r\n    directory => directory.sections\r\n);","import styled from 'styled-components';\r\n\r\nexport const DirectoryMenuContainer = styled.div`\r\nwidth: 100%;\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\njustify-content: space-between;\r\n`;","import styled , { css } from 'styled-components';\r\n\r\nconst TransitionMenuItem = css`\r\n    transition:all 3s ease-in-out;\r\n`;\r\n\r\nexport const MenuItemContainer = styled.div`\r\n    height: ${ ( { size } ) => ( size ? '380px' : '240px' ) };\r\n    min-width: 30%;\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px solid black;\r\n    margin: 0 7.5px 15px;\r\n    overflow:hidden;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n\r\n        & .background-image{\r\n            transform: scale(1.1);\r\n        }\r\n        & .content{\r\n            opacity:0.9;\r\n        }\r\n    }\r\n\r\n    &:first-child {\r\n        margin-right: 7.5px;\r\n    }\r\n\r\n    &:last-child {\r\n        margin-left: 7.5px;\r\n    }\r\n\r\n    @media screen and (max-width: 800px) {\r\n       height:200px;\r\n    }\r\n`;\r\n\r\nexport const BackgroundImageContainer = styled.div`\r\n    width:100%;\r\n    height:100%;\r\n    background-position: center;\r\n    background-size: cover;\r\n    ${TransitionMenuItem}\r\n    background-image:${ ( { image } ) => ( `url(${image})` ) };\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    height: 90px;\r\n    padding: 0 25px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px solid black;\r\n    background-color:#fff;\r\n    opacity: 0.7;\r\n    position: absolute;\r\n    ${TransitionMenuItem}\r\n`;\r\n\r\nexport const ContentTitle = styled.h1 `\r\n    font-weight: bold;\r\n    margin-bottom: 6px;\r\n    font-size: 22px;\r\n    color: #4a4a4a;\r\n    margin:0;\r\n`;\r\n\r\nexport const ContentSubTitle = styled.span `\r\n    font-weight: lighter;\r\n    font-size: 16px;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n// import './menu-item.styles.scss';\r\n\r\nimport {\r\n    MenuItemContainer,\r\n    BackgroundImageContainer,\r\n    ContentContainer,\r\n    ContentTitle,\r\n    ContentSubTitle\r\n} from './menu-item.styles';\r\n\r\nconst MenuItem = ({title, imageUrl, size, history, match, linkUrl}) => (\r\n    <MenuItemContainer \r\n         size={size}\r\n         onClick = { () => history.push(`${match.url}${linkUrl}`) }\r\n    >\r\n\r\n        <BackgroundImageContainer \r\n            className=\"background-image\"\r\n            image={imageUrl}\r\n        />\r\n\r\n        <ContentContainer className=\"content\">\r\n            <ContentTitle> {title.toUpperCase()}  </ContentTitle>\r\n            <ContentSubTitle> SHOP NOW </ContentSubTitle>\r\n        </ContentContainer>\r\n    </MenuItemContainer>\r\n\r\n)\r\n\r\nexport default withRouter(MenuItem);","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectDirectorySections } from '../../redux/directory/directory.selector';\r\n\r\n// import './directory.styles.scss';\r\nimport { DirectoryMenuContainer } from './directory.styles';\r\n\r\nimport MenuItem from '../menu-item/menu-item.component'\r\n\r\nconst Directory = ({ sections }) => (\r\n  <DirectoryMenuContainer>\r\n      \r\n      {\r\n          sections.map(({ id, ...otherSectionProps}) => (\r\n              <MenuItem key={id} {...otherSectionProps}  />\r\n          ))\r\n      }\r\n\r\n  </DirectoryMenuContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  sections: selectDirectorySections\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Directory);","import styled from 'styled-components';\r\n\r\nexport const HomePageContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px 80px;\r\n\r\n    @media screen and (max-width:800px) {\r\n        padding:20px;\r\n    }\r\n`;","import React, {Profiler} from 'react';\r\n\r\nimport Directory from '../../components/directory/directory.component'\r\n\r\n// import './homepage.styles.scss';\r\nimport { HomePageContainer } from  './homepage.styles';\r\n\r\nconst HomePage = () => (\r\n    \r\n    <HomePageContainer>\r\n        <Profiler id='Directory' onRender={(id, phase, actualDuration) => {\r\n            console.log({\r\n                id,\r\n                phase,\r\n                actualDuration\r\n            });\r\n        }}>\r\n          <Directory  />\r\n        </Profiler>\r\n    </HomePageContainer>\r\n)\r\n\r\nexport default HomePage;"],"sourceRoot":""}