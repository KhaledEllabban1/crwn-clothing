{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selector.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageContainer","styled","div","TitleContainer","h2","ItemsContainer","connect","state","ownProps","collection","selectCollection","match","params","collectionId","items","title","map","item","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","collectionUrlParam","selectCollectionForPreview","Object","keys","key","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","BackgroundImage","AddButton","CustomButtonContainer","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","imageUrl","name","price","className","style","backgroundImage","inverted","onClick"],"mappings":"mpBAEO,IAAMA,EAA0BC,IAAOC,IAAV,KAKvBC,EAAiBF,IAAOG,GAAV,KAKdC,EAAiBJ,IAAOC,IAAV,KCuBZI,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC1CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGtDD,EAnBQ,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WACdK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MACf,OACA,eAACf,EAAD,WACI,eAACG,EAAD,eAAkBY,EAAlB,OACA,cAACV,EAAD,UAEQS,EAAME,KACF,SAAAC,GAAI,OAAM,cAAC,IAAD,CAA8BA,KAAQA,GAAjBA,EAAKC,eCjBlDC,EAAkBC,YAAyB,CAC9CC,UAAW,SAAAd,GAAK,OAAKe,YAA0Bf,MAG5CP,EAA0BuB,YAC5BjB,YAAQa,GACRK,IAF4BD,CAG9BE,GAEazB,a,gCChBf,oJAEM0B,EAAa,SAAAnB,GAAK,OAAIA,EAAMoB,MAErBC,EAAoBC,YAC7B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGJpB,EAAmB,SAAAqB,GAAkB,OAAIF,YAClD,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAeA,EAAYC,GAAsB,SAGxDC,EAA6BH,YACtC,CAACD,IACD,SAAAE,GAAW,OAAIA,EAAcG,OAAOC,KAAKJ,GAAad,KAAI,SAAAmB,GAAG,OAAIL,EAAYK,MAAS,MAG7EC,EAA6BP,YACtC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKU,cAGJf,EAA4BO,YACrC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,gB,yECdJN,IARK,SAAAc,GAAgB,OAAI,YAAmC,IAAhCjB,EAA+B,EAA/BA,UAAckB,EAAiB,6BACtE,OAAOlB,EACH,cAAC,IAAD,IAEI,cAACiB,EAAD,eAAuBC,O,ikDCJ5B,IAAMC,EAA0BvC,IAAOC,IAAV,KAgCtBuC,EAAkBxC,IAAOC,IAAV,KAQhBwC,EAAYzC,YAAO0C,IAAP1C,CAAH,KAgBT2C,EAA4B3C,IAAOC,IAAV,KAQzB2C,EAAgB5C,IAAO6C,KAAV,KAKbC,EAAiB9C,IAAO6C,KAAV,KC9BZxC,gBAAQ,MAJI,SAAA0C,GAAQ,MAAK,CACrCC,QAAU,SAAAhC,GAAI,OAAI+B,EAASC,YAAQhC,QAGvBX,EAxBQ,SAAC,GAAqB,IAApBW,EAAmB,EAAnBA,KAAMgC,EAAa,EAAbA,QACrB/B,EAA8BD,EAA9BC,GAAIgC,EAA0BjC,EAA1BiC,SAAUC,EAAgBlC,EAAhBkC,KAAMC,EAAUnC,EAAVmC,MAC3B,OACC,eAACZ,EAAD,WACI,cAACC,EAAD,CACEY,UAAU,QACVC,MAAS,CACPC,gBAAe,cAAUL,EAAV,QAGnB,eAACN,EAAD,WACE,eAACC,EAAD,eAAiBM,EAAjB,OACA,eAACJ,EAAD,eAAkBK,EAAlB,UAGF,cAACV,EAAD,CAAWc,UAAQ,EAACC,QAAU,kBAAMR,EAAQhC,IAA5C,8BAZ0BC","file":"static/js/0.f704d369.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const TitleContainer = styled.h2`\r\n    font-size: 38px;\r\n    margin: 0 auto 30px;\r\n`;\r\n\r\nexport const ItemsContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-gap: 10px;\r\n\r\n    & > div {\r\n        margin-bottom: 30px;\r\n      }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n// import './collection.styles.scss';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { selectCollection } from '../../redux/shop/shop.selector'\r\n\r\nimport CollectionItem from '../../components/collection-item/collection-item.component';\r\n\r\nimport {\r\n    CollectionPageContainer,\r\n    TitleContainer,\r\n    ItemsContainer\r\n} from './collection.styles';\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n    const { items, title } = collection;\r\n    return(\r\n    <CollectionPageContainer>\r\n        <TitleContainer> {title} </TitleContainer>\r\n        <ItemsContainer>\r\n            {\r\n                items.map(\r\n                    item => ( <CollectionItem key={item.id} item = {item} /> )\r\n                )\r\n            }\r\n        </ItemsContainer>\r\n    </CollectionPageContainer>\r\n)};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\r\nimport CollectionPage from './collection.component';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n   isLoading: state => !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n    connect(mapStateToProps),\r\n    WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollection = collectionUrlParam => createSelector(\r\n    [selectCollections],\r\n    collections => (collections ?  collections[collectionUrlParam] : null)\r\n);\r\n\r\nexport const selectCollectionForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key] ) : []\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n    [selectShop],\r\n    shop => !!shop.collections\r\n)","import React from 'react';\r\n\r\nimport  Spinner  from '../spinner/spinner.component';\r\n\r\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n        <Spinner />\r\n        ) : (\r\n            <WrappedComponent { ...otherProps } />\r\n        );\r\n    };\r\n\r\nexport default WithSpinner;","import styled from 'styled-components';\r\n\r\nimport { CustomButtonContainer } from '../custom-button/custom-button.styles';\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n    width: 22vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 350px;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    &:hover {\r\n        .image{\r\n          opacity: 0.8;\r\n        }\r\n        button{\r\n          opacity: 0.85;\r\n          display: flex;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 800px) {\r\n        width: 40vw;\r\n\r\n        &:hover {\r\n            .image{\r\n              opacity: unset;\r\n            }\r\n            button{\r\n              opacity:unset;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const  BackgroundImage = styled.div`\r\n    width: 100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nexport const AddButton = styled(CustomButtonContainer)`\r\n    width:80%;\r\n    opacity: 0.7;\r\n    position: absolute;\r\n    top:255px;\r\n    display: none;\r\n\r\n    @media screen and (max-width: 800px) {\r\n        display:block;\r\n        opacity:0.9;\r\n        min-width:unset;\r\n        padding:0 10px;\r\n    }\r\n    \r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n    width: 100%;\r\n    height: 5%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n    width: 90%;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n    width: 10%;\r\n`;","import React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport { addItem } from '../../redux/cart/cart.actions';\r\n\r\n// import CustomButton from '../custom-button/custom-button.component';\r\n\r\n// import './collection-item.styles.scss';\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer\r\n} from './collection-item.styles';\r\n\r\nconst CollectionItem = ({item, addItem}) => {\r\n  const { id, imageUrl, name, price}  = item;\r\n   return(\r\n    <CollectionItemContainer key={id}>\r\n        <BackgroundImage\r\n          className='image'\r\n          style = {{\r\n            backgroundImage : `url(${imageUrl})`\r\n          }}\r\n        />\r\n        <CollectionFooterContainer>\r\n          <NameContainer> {name} </NameContainer>\r\n          <PriceContainer> {price} </PriceContainer>\r\n        </CollectionFooterContainer>\r\n\r\n        <AddButton inverted onClick={ () => addItem(item)}> add to cart  </AddButton>\r\n\r\n    </CollectionItemContainer>\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   addItem : item => dispatch(addItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);"],"sourceRoot":""}