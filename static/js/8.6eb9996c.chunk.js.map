{"version":3,"sources":["components/sttipe-button/stripe-button.component.jsx","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/checkout.component.jsx"],"names":["StripeCheckoutButton","price","priceForStripe","label","name","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","JSON","parse","stripeKey","CheckOutItemContainer","styled","div","ImageContainer","TextContainer","span","QuantityContainer","RemoveButtonContainer","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","imageUrl","quantity","src","alt","className","onClick","CheckOutPageContainer","CheckOutHeaderContainer","HeaderBlockContainer","TotalContainer","TestWarningContainer","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartItemsTotal","map","id"],"mappings":"2MA6CeA,EAzCc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrBC,EAAyB,IAARD,EAwBvB,OACG,cAAC,IAAD,CACIE,MAAQ,UACRC,KAAO,qBACPC,gBAAc,EACdC,iBAAe,EACfC,MAAQ,iCACRC,YAAW,gCAA6BP,GACxCQ,OAAWP,EACXQ,WAAa,kBACbC,MA/BS,SAAAA,GAEbC,IAAM,CACFC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACFN,OAAQP,EACRS,WAGPK,MAAK,SAAAC,GACFC,MAAM,yBAETC,OAAM,SAAAC,GACHC,QAAQC,IAAI,kBAAmBC,KAAKC,MAAMJ,IAC1CF,MACI,0FAgBJO,UAlCgB,iH,k0BCJrB,IAAMC,EAAwBC,IAAOC,IAAV,KAUrBC,EAAiBF,IAAOC,IAAV,KAUdE,EAAgBH,IAAOI,KAAV,KAIbC,EAAoBL,YAAOG,EAAPH,CAAH,KAYjBM,EAAwBN,IAAOC,IAAV,KCGnBM,cAAQ,MANI,SAAAC,GAAQ,MAAI,CACnCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,QAG7BH,EAxBM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWI,EAA0B,EAA1BA,WAAYD,EAAc,EAAdA,QAC7CG,EAAoCD,EAApCC,SAAUtC,EAA0BqC,EAA1BrC,KAAMuC,EAAoBF,EAApBE,SAAU1C,EAAUwC,EAAVxC,MAClC,OACA,eAACyB,EAAD,WACI,cAACG,EAAD,UACI,qBAAKe,IAAKF,EAAUG,IAAI,WAE5B,eAACf,EAAD,eAAiB1B,EAAjB,QACA,eAAC4B,EAAD,WACI,qBAAKc,UAAU,QAAQC,QAAU,kBAAMP,EAAWC,IAAlD,wBACA,uBAAMK,UAAU,QAAhB,cAA0BH,EAA1B,QACA,qBAAKG,UAAU,QAAQC,QAAU,kBAAMR,EAAQE,IAA/C,0BAEJ,eAACX,EAAD,eAAiB7B,EAAjB,OACA,cAACgC,EAAD,CAAuBc,QAAU,kBAAMX,EAAUK,IAAjD,6B,08BC7BD,IAAMO,EAAwBrB,IAAOC,IAAV,KAcrBqB,EAA0BtB,IAAOC,IAAV,KASvBsB,EAAuBvB,IAAOC,IAAV,KASpBuB,EAAiBxB,IAAOC,IAAV,KAMdwB,EAAuBzB,IAAOC,IAAV,KCmB3ByB,EAAkBC,YAAyB,CAC7CC,UAAWC,IACXC,MAAQC,MAEGxB,sBAAQmB,EAARnB,EA5CE,SAAC,GAAD,IAAGqB,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACb,eAACT,EAAD,WACI,eAACC,EAAD,WACI,cAACC,EAAD,UACI,+CAEJ,cAACA,EAAD,UACI,mDAEJ,cAACA,EAAD,UACI,gDAEJ,cAACA,EAAD,UACI,6CAEJ,cAACA,EAAD,UACI,iDAKJK,EAAUI,KAAK,SAAAlB,GAAQ,OACpB,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAASmB,OAInC,cAACT,EAAD,UACI,6CAAgBM,EAAhB,SAEJ,eAACL,EAAD,sEAEI,uBAFJ,gDAII,uBAJJ,iDAOA,cAAC,EAAD,CAAsBnD,MAASwD","file":"static/js/8.6eb9996c.chunk.js","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n     const priceForStripe = price * 100;\r\n     const publishableKey = 'pk_test_51ILxlJG616nDdjAY0bM05QigwvKHtoaxNYarfhl9R0dFbh02Ufuxm6ZJ8YmliLIlz5WjWhIRcdmfGwGFbkYHos6S00RC5lmEh7';\r\n\r\n     const onToken = token => {\r\n        //  console.log(token);\r\n        axios({\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token \r\n            }\r\n        })\r\n        .then(response => {\r\n            alert('Payment successful');\r\n        })\r\n        .catch(error =>{\r\n            console.log('Payment error: ', JSON.parse(error));\r\n            alert(\r\n                'There was an issue with your payment. Please sure you use the provided credit card'\r\n            );\r\n        });\r\n     };\r\n\r\n     return (\r\n        <StripeCheckout\r\n            label = 'Pay Now'\r\n            name = 'CRWN Clothing ltd.'\r\n            billingAddress\r\n            shippingAddress\r\n            image = 'https://svgshare.com/i/CUz.svg'\r\n            description = {`Your Total Price is $ ${price}`}\r\n            amount = { priceForStripe }\r\n            panelLabel = 'Pay as you Wish'\r\n            token = { onToken }\r\n            stripeKey = { publishableKey }\r\n        />\r\n     );\r\n};\r\n\r\nexport default StripeCheckoutButton;","import styled from 'styled-components';\r\n\r\nexport const CheckOutItemContainer = styled.div `\r\n    width: 100%;\r\n    display: flex;\r\n    min-height: 100px;\r\n    border-bottom: 1px solid darkgrey;\r\n    padding: 15px 0;\r\n    font-size: 20px;\r\n    align-items: center;\r\n`;\r\n\r\nexport const ImageContainer = styled.div `\r\n    width: 23%;\r\n    padding-right: 15px;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport const TextContainer = styled.span `\r\n    width: 23%;\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n    display: flex;\r\n\r\n    div {\r\n        cursor: pointer;\r\n    }\r\n\r\n    span {\r\n        margin:0 10px;\r\n    }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div `\r\n    padding-left: 12px;\r\n    cursor: pointer;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.actions';\r\n\r\n\r\n// import './checkout-item.styles.scss';\r\n\r\nimport { \r\n    CheckOutItemContainer,\r\n    ImageContainer,\r\n    TextContainer,\r\n    QuantityContainer,\r\n    RemoveButtonContainer\r\n} from './checkout-item.styles';\r\n\r\nconst CheckOutItem = ({ cartItem, clearItem, removeItem, addItem }) => {\r\n    const { imageUrl, name, quantity, price } = cartItem;\r\n    return(\r\n    <CheckOutItemContainer>\r\n        <ImageContainer>\r\n            <img src={imageUrl} alt=\"item\"/>\r\n        </ImageContainer>\r\n        <TextContainer> {name}  </TextContainer>\r\n        <QuantityContainer>\r\n            <div className='arrow' onClick={ () => removeItem(cartItem) }> &#10094;   </div> \r\n            <span className='value'> {quantity}  </span>\r\n            <div className='arrow' onClick={ () => addItem(cartItem) }>  &#10095; </div> \r\n        </QuantityContainer>\r\n        <TextContainer> {price} </TextContainer>\r\n        <RemoveButtonContainer onClick={ () => clearItem(cartItem) }>  &#10005; </RemoveButtonContainer>\r\n    </CheckOutItemContainer>\r\n)};\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    clearItem: item => dispatch(clearItemFromCart(item)),\r\n    addItem: item => dispatch(addItem(item)),\r\n    removeItem: item => dispatch(removeItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckOutItem);","import styled from 'styled-components';\r\n\r\nexport const CheckOutPageContainer = styled.div`\r\n    width: 55%;\r\n    min-height: 90vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 50px auto 0;\r\n\r\n    button {\r\n        margin-left: auto;\r\n        margin-top: 50px;\r\n      }\r\n`;\r\n\r\nexport const CheckOutHeaderContainer = styled.div`\r\n    width: 100%;\r\n    padding: 10px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n    text-transform: capitalize;\r\n    width: 23%;\r\n\r\n    &:last-child {\r\n        width: 8%;\r\n      }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n    margin-top: 30px;\r\n    margin-left: auto;\r\n    font-size: 36px;\r\n`;\r\n\r\nexport const TestWarningContainer = styled.div`\r\n    text-align: center;\r\n    margin-top: 40px;\r\n    font-size: 24px;\r\n    color: red;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCartItems, selectCartItemsTotal } from '../../redux/cart/cart.selectors';\r\n\r\nimport  SttipeCheckoutButton from '../../components/sttipe-button/stripe-button.component';\r\n\r\nimport CheckOutItem from '../../components/checkout-item/checkout-item.component';\r\n// import './checkout.styles.scss';\r\n\r\nimport {\r\n    CheckOutPageContainer,\r\n    CheckOutHeaderContainer,\r\n    HeaderBlockContainer,\r\n    TotalContainer,\r\n    TestWarningContainer\r\n} from './checkout.styles';\r\n\r\nconst CheckOut = ({ cartItems, total }) => (\r\n    <CheckOutPageContainer>\r\n        <CheckOutHeaderContainer>\r\n            <HeaderBlockContainer>\r\n                <span> Product </span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span> Description </span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span> Quantity </span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span> Price </span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n                <span> Remove </span>\r\n            </HeaderBlockContainer>\r\n        </CheckOutHeaderContainer>\r\n\r\n        {\r\n            cartItems.map( cartItem =>\r\n               <CheckOutItem key={cartItem.id} cartItem={cartItem} />\r\n            )\r\n        }\r\n\r\n        <TotalContainer>\r\n            <span> TOTAL: ${total} </span>\r\n        </TotalContainer>\r\n        <TestWarningContainer>\r\n            *Please use the following test credit card for payments*\r\n            <br />\r\n            and see the Token on console after submitting\r\n            <br />\r\n            4242 4242 4242 4242 - Exp: 01/22 - CVV: 123\r\n        </TestWarningContainer>\r\n        <SttipeCheckoutButton price = {total} />\r\n    </CheckOutPageContainer>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total : selectCartItemsTotal\r\n});\r\nexport default connect(mapStateToProps)(CheckOut);"],"sourceRoot":""}